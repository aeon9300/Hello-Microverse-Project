"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const debug_1 = require("@hint/utils/dist/src/debug");
const meta_1 = require("./meta");
const i18n_import_1 = require("./i18n.import");
const debug = debug_1.debug(__filename);
class ButtonTypeHint {
    constructor(context) {
        const validateElement = (elementFound) => {
            const { resource } = elementFound;
            const allowedTypes = ['submit', 'reset', 'button'];
            debug('Validating hint button-type');
            const element = elementFound.element;
            const elementType = element.getAttribute('type');
            if (element.isAttributeAnExpression('type')) {
            }
            else if (elementType === null || elementType === '') {
                context.report(resource, i18n_import_1.getMessage('attributeNotSet', context.language), { element });
            }
            else if (!allowedTypes.includes(elementType.toLowerCase())) {
                context.report(resource, i18n_import_1.getMessage('invalidType', context.language, elementType), { element });
            }
        };
        context.on('element::button', validateElement);
    }
}
exports.default = ButtonTypeHint;
ButtonTypeHint.meta = meta_1.default;
