"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("@hint/utils");
const meta_1 = require("./meta");
const i18n_import_1 = require("./i18n.import");
const { isTextMediaType } = utils_1.contentType;
const { isRegularProtocol } = utils_1.network;
const debug = utils_1.debug(__filename);
class default_1 {
    constructor(context) {
        const validateFetchEnd = async (fetchEnd) => {
            debug(`Validating hint no-bom`);
            const { resource, element } = fetchEnd;
            if (!isRegularProtocol(resource) || !isTextMediaType(fetchEnd.response.mediaType)) {
                return;
            }
            const safeFetch = utils_1.asyncTry(context.fetchContent.bind(context));
            const request = await safeFetch(resource);
            if (!request) {
                context.report(resource, i18n_import_1.getMessage('couldNotBeFetched', context.language), { element });
                debug(`Error requesting the resource: ${resource}`);
                return;
            }
            const content = request.response.body.rawContent;
            if (content[0] === 0xEF &&
                content[1] === 0xBB &&
                content[2] === 0xBF) {
                context.report(resource, i18n_import_1.getMessage('textBased', context.language), { element });
            }
        };
        context.on('fetch::end::*', validateFetchEnd);
    }
}
exports.default = default_1;
default_1.meta = meta_1.default;
