"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("@hint/utils");
const is_valid_1 = require("./meta/is-valid");
const debug = utils_1.debug(__filename);
class TypeScriptConfigIsValid {
    constructor(context) {
        const invalidJSONFile = (typeScriptConfigInvalid, event) => {
            const { error, resource } = typeScriptConfigInvalid;
            debug(`${event} received`);
            context.report(resource, error.message);
        };
        const invalidExtends = (typeScriptConfigInvalid, event) => {
            const { error, resource, getLocation } = typeScriptConfigInvalid;
            debug(`${event} received`);
            context.report(resource, error.message, { location: getLocation('extends', { at: 'value' }) });
        };
        const invalidSchema = (fetchEnd) => {
            const { groupedErrors, resource } = fetchEnd;
            debug(`'parse::error::typescript-config::schema' received`);
            groupedErrors.forEach((groupedError) => {
                context.report(resource, groupedError.message, { location: groupedError.location });
            });
        };
        context.on('parse::error::typescript-config::json', invalidJSONFile);
        context.on('parse::error::typescript-config::extends', invalidExtends);
        context.on('parse::error::typescript-config::schema', invalidSchema);
    }
}
exports.default = TypeScriptConfigIsValid;
TypeScriptConfigIsValid.meta = is_valid_1.default;
