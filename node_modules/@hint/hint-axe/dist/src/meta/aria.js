"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const category_1 = require("hint/dist/src/lib/enums/category");
const hint_scope_1 = require("hint/dist/src/lib/enums/hint-scope");
const i18n_import_1 = require("../i18n.import");
const meta = {
    docs: {
        category: category_1.Category.accessibility,
        description: i18n_import_1.getMessage('aria_description', 'en'),
        name: i18n_import_1.getMessage('aria_name', 'en')
    },
    getDescription(language) {
        return i18n_import_1.getMessage('aria_description', language);
    },
    getName(language) {
        return i18n_import_1.getMessage('aria_name', language);
    },
    id: 'axe/aria',
    schema: [{
            additionalProperties: false,
            properties: {
                'aria-allowed-attr': { enum: ['off', 'warning', 'error'], type: 'string' },
                'aria-allowed-role': { enum: ['off', 'warning', 'error'], type: 'string' },
                'aria-dpub-role-fallback': { enum: ['off', 'warning', 'error'], type: 'string' },
                'aria-hidden-body': { enum: ['off', 'warning', 'error'], type: 'string' },
                'aria-input-field-name': { enum: ['off', 'warning', 'error'], type: 'string' },
                'aria-required-attr': { enum: ['off', 'warning', 'error'], type: 'string' },
                'aria-required-children': { enum: ['off', 'warning', 'error'], type: 'string' },
                'aria-required-parent': { enum: ['off', 'warning', 'error'], type: 'string' },
                'aria-roledescription': { enum: ['off', 'warning', 'error'], type: 'string' },
                'aria-roles': { enum: ['off', 'warning', 'error'], type: 'string' },
                'aria-toggle-field-name': { enum: ['off', 'warning', 'error'], type: 'string' },
                'aria-valid-attr': { enum: ['off', 'warning', 'error'], type: 'string' },
                'aria-valid-attr-value': { enum: ['off', 'warning', 'error'], type: 'string' }
            }
        }],
    scope: hint_scope_1.HintScope.any
};
exports.default = meta;
