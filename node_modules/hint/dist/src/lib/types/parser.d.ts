import { Engine } from '../engine';
import { Events } from './events';
export interface IParsingError extends Error {
    resource: string;
}
export declare type ExtendableConfiguration = {
    extends: string;
};
export interface IParserConstructor {
    new (engine: Engine): Parser;
}
export declare abstract class Parser<E extends Events = Events> {
    protected engine: Engine<E>;
    protected name: string;
    protected finalConfig<T extends ExtendableConfiguration>(config: T, resource: string): T | IParsingError;
    constructor(engine: Engine<E>, parseEventType: string);
}
//# sourceMappingURL=parser.d.ts.map